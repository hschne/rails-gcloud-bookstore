name: Preview

on:
  pull_request:
    branches:
      - "main"
    types: [synchronize, opened, reopened]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      DATABASE_HOST: localhost
      DATABASE_USERNAME: bookstore
      DATABASE_PASSWORD: bookstore
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: bookstore
          POSTGRES_USER: bookstore
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.9
      - name: Install dependencies
        run: |
          sudo apt-get -yqq install libpq-dev build-essential libcurl4-openssl-dev
          gem install bundler
          bundle install --jobs 4
          yarn install
      - name: Setup databases
        run: |
          bin/rails db:setup
      - name: Run tests
        run: bin/rails test

  container:
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: rails-gcloud-bookstore
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Install Google Cloud Docker
        run: gcloud components install docker-credential-gcr
      - name: Setup Docker for GCR
        run: gcloud auth configure-docker

      - name: Build Docker Image
        run: |
          echo ${{ secrets.RAILS_PRODUCTION_KEY }} > config/credentials/production.key 
          docker build -t gcr.io/rails-gcloud-bookstore/bookstore:${{github.event.number}} .
      - name: Push Docker Image
        run: docker push gcr.io/rails-gcloud-bookstore/bookstore:${{github.event.number}}

  preview:
    runs-on: ubuntu-latest
    needs: [container]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: rails-gcloud-bookstore
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get HEAD Commit Hash
        id: commit
        run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"
      - name: Deploy Revision On Cloud Run
        run: |
          gcloud run deploy bookstore \
          --image=gcr.io/rails-gcloud-bookstore/bookstore:${{github.event.number}} \
          --platform=managed \
          --port=3000 \
          --revision-suffix=${{github.event.number}}-${{steps.commit.outputs.hash}} \
          --add-cloudsql-instances=rails-gcloud-bookstore:europe-north1:bookstore-db  \
          --set-env-vars DATABASE_HOST=/cloudsql/rails-gcloud-bookstore:europe-north1:bookstore-db \
          --set-env-vars DATABASE_USERNAME='bookstore' \
          --set-env-vars DATABASE_PASSWORD='bookstore' \
          --set-env-vars DATABASE_NAME=bookstore{{github.event.number}} \
          --set-env-vars RAILS_PRODUCTION_KEY=${{ secrets.RAILS_PRODUCTION_KEY }} \
          --region=europe-north1 
      - name: Update Traffic
        run: |
          gcloud components install beta
          gcloud beta run services update-traffic bookstore \
            --update-tags pr-${{github.event.number}}=bookstore-${{github.event.number}}-${{steps.commit.outputs.hash}} \
            --platform=managed \
            --region=europe-north1
              name: Get Preview URL
      - name: preview-url
        run: |
          url=$(gcloud run services describe bookstore --format 'value(status.url)' --platform=managed --region=europe-north1 | sed 's|https://|https://pr-${{github.event.number}}---|g')
          echo "::set-output name=url::$url"
      - name: Post PR comment with preview deployment URL
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: |
            Successfully deployed preview at ${{steps.preview-url.outputs.url}}
          allow-repeats: false
